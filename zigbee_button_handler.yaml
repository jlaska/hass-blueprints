# MQTT Tpoic Example - https://community.home-assistant.io/t/zigbee2mqtt-control-light-entity-including-press-turn-with-tuya-moes-smart-knob-ers-10tzbvk-aa/787779
# Device event Example - https://community.home-assistant.io/t/aqara-wireless-switch-wxkg11lm-via-zigbee2mqtt-device-trigger/808126
mode: parallel
max_exceeded: silent
blueprint:
  domain: automation
  author: James Laska
  name: Generic Zigbee button blueprint
  description: "Automate button press events for Zigbee button sensors. Supports both zha and zigbee2mqtt integrations as well as single, double, triple, hold and release events."
  source_url: https://github.com/jlaska/home-assistant-blueprints/blob/master/zigbee_button_handler.yaml
  input:
    mqtt_sensor:
      name: MQTT Sensor
      description: The MQTT entity (domain:sensor) to trigger events
      default:
      selector:
        entity:
          multiple: true
          domain: sensor
          integration: mqtt
    zha_sensor:
      name: ZHA Button
      description: The ZHA device (model:button) to trigger events
      default:
      selector:
        device:
          integration: zha
          model: button
    mqtt_topic:
      name: MQTT Topic
      description: Topic of the Philips Hue Tap Dial Switch (e.g. zigbee2mqtt/<device name>)
      default: 'zigbee2mqtt/'
    mqtt_event:
      name: MQTT Event
      description: MQTT Event entity to trigger actions
      selector:
        entity:
          multiple: true
          domain: event
          integration: mqtt
    single_action:
      name: Single button press
      description: Action to run on single button press
      default: []
      selector:
        action: {}
    double_action:
      name: Double button press
      description: Action to run on double button press
      default: []
      selector:
        action: {}
    triple_action:
      name: Triple button press
      description: Action to run on triple button press
      default: []
      selector:
        action: {}
    hold_action:
      name: Button hold
      description: Action to run on hold
      default: []
      selector:
        action: {}
    release_action:
      name: Button release
      description: Action to run on release
      default: []
      selector:
        action: {}
trigger:
- platform: event
  event_type: zha_event
  event_data:
    device_id: !input 'zha_sensor'
- platform: state
  entity_id: !input 'mqtt_sensor'
- platform: mqtt
  topic: !input 'mqtt_topic'
- platform: state
  entity_id: !input 'mqtt_event'
  attribute: event_type
action:
- variables:
    command: |-
      {{
        (trigger.platform == 'event' and trigger.event.data.args.press_type) or
        (trigger.platform == 'state' and trigger.attribute != 'event_type' and trigger.to_state.state) or
        (trigger.platform == 'state' and trigger.attribute == 'event_type' and trigger.attribute == 'event_type' and trigger.to_state.attributes.event_type) or
        (trigger.platform == 'mqtt' and trigger.payload_json.action) or "unknown"
      }}
- choose:
  - conditions: '{{ command == ''single'' }}'
    sequence: !input 'single_action'
  - conditions: '{{ command == ''double'' }}'
    sequence: !input 'double_action'
  - conditions: '{{ command == ''triple'' }}'
    sequence: !input 'triple_action'
  - conditions: '{{ command == ''hold'' }}'
    sequence: !input 'hold_action'
  - conditions: '{{ command == ''release'' }}'
    sequence: !input 'release_action'
